{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hayden\\\\Documents\\\\BVT School Work\\\\ChatGPT\\\\cookie-clicker-game\\\\temp-repo\\\\src\\\\components\\\\inventory\\\\inventory.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { useDrag, useDrop } from 'react-dnd';\nimport styles from './inventory.module.css';\nimport itemConfig from '../items/itemConfig.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ItemTypes = {\n  ITEM: 'item'\n};\nconst MAX_INVENTORY_CAPACITY = 30;\nconst MAX_STACK_SIZE = 65535;\nfunction Inventory({\n  inventory = [],\n  setPlayer,\n  maxInventorySpace = MAX_INVENTORY_CAPACITY,\n  gameState,\n  setGameState\n}) {\n  _s();\n  const [itemOptions, setItemOptions] = useState(null);\n  const [dropOptions, setDropOptions] = useState(null);\n  const optionsTimeout = useRef(null);\n  const handleMoveItem = useCallback((fromIndex, toIndex) => {\n    if (fromIndex === toIndex) return;\n    const updatedInventory = [...inventory];\n    const [movedItem] = updatedInventory.splice(fromIndex, 1);\n    updatedInventory.splice(toIndex, 0, movedItem);\n    const filteredInventory = updatedInventory.filter(item => item !== null);\n    setPlayer(prevPlayer => ({\n      ...prevPlayer,\n      inventory: filteredInventory\n    }));\n  }, [inventory, setPlayer]);\n  const handleLeftClick = useCallback((item, index, slotElement) => {\n    if (item) {\n      const rect = slotElement.getBoundingClientRect();\n      setItemOptions({\n        item,\n        index,\n        position: {\n          top: rect.bottom + window.scrollY,\n          // Position below the inventory slot\n          left: rect.left + rect.width / 2 // Center horizontally\n        }\n      });\n\n      // Clear any existing timeout to reset the 5-second timer\n      if (optionsTimeout.current) {\n        clearTimeout(optionsTimeout.current);\n      }\n\n      // Auto-dismiss the options after 5 seconds if the mouse isn't inside\n      optionsTimeout.current = setTimeout(() => {\n        setItemOptions(null);\n      }, 5000);\n    } else {\n      setItemOptions(null);\n    }\n  }, []);\n  const handleMouseEnterOptions = useCallback(() => {\n    if (optionsTimeout.current) {\n      clearTimeout(optionsTimeout.current);\n    }\n  }, []);\n  const handleMouseLeaveOptions = useCallback(() => {\n    if (optionsTimeout.current) {\n      clearTimeout(optionsTimeout.current);\n    }\n    optionsTimeout.current = setTimeout(() => {\n      setItemOptions(null);\n    }, 5000);\n  }, []);\n  const handleEquipItem = item => {\n    setGameState(prevState => {\n      const equipmentSlot = item.slot;\n      let updatedEquipment = {\n        ...prevState.equipment\n      };\n      let updatedInventory = [...prevState.inventory];\n\n      // Remove the item from inventory\n      const itemIndex = updatedInventory.findIndex(i => i.itemId === item.itemId);\n      if (itemIndex > -1) {\n        if (updatedInventory[itemIndex].quantity > 1) {\n          updatedInventory[itemIndex].quantity -= 1;\n        } else {\n          updatedInventory.splice(itemIndex, 1);\n        }\n      }\n\n      // Equip the item in the appropriate slot\n      if (equipmentSlot === 'fingers') {\n        const emptyFingerSlot = updatedEquipment.fingers.findIndex(finger => finger === null);\n        if (emptyFingerSlot !== -1) {\n          updatedEquipment.fingers[emptyFingerSlot] = item;\n        } else {\n          alert('No available finger slot to equip this item.');\n          return prevState;\n        }\n      } else if (equipmentSlot === 'leftGlove' || equipmentSlot === 'rightGlove' || equipmentSlot === 'offHand') {\n        // For leftGlove, rightGlove, and offHand slots\n        if (updatedEquipment[equipmentSlot]) {\n          // Unequip current item and add back to inventory\n          if (updatedInventory.length >= maxInventorySpace) {\n            alert('Inventory is full! Cannot unequip this item.');\n            return prevState;\n          }\n          updatedInventory.push({\n            ...updatedEquipment[equipmentSlot],\n            quantity: 1\n          });\n        }\n        updatedEquipment[equipmentSlot] = item;\n      } else {\n        // For other slots\n        if (updatedEquipment[equipmentSlot]) {\n          // Unequip current item and add back to inventory\n          if (updatedInventory.length >= maxInventorySpace) {\n            alert('Inventory is full! Cannot unequip this item.');\n            return prevState;\n          }\n          updatedInventory.push({\n            ...updatedEquipment[equipmentSlot],\n            quantity: 1\n          });\n        }\n        updatedEquipment[equipmentSlot] = item;\n      }\n      return {\n        ...prevState,\n        equipment: updatedEquipment,\n        inventory: updatedInventory\n      };\n    });\n  };\n  const handleUseItem = item => {\n    setGameState(prevState => {\n      let updatedInventory = [...prevState.inventory];\n      let updatedPlayer = {\n        ...prevState.player\n      };\n\n      // Remove the item from inventory\n      const itemIndex = updatedInventory.findIndex(i => i.itemId === item.itemId);\n      if (itemIndex > -1) {\n        if (updatedInventory[itemIndex].quantity > 1) {\n          updatedInventory[itemIndex].quantity -= 1;\n        } else {\n          updatedInventory.splice(itemIndex, 1);\n        }\n      }\n\n      // Apply the item's effect (e.g., healing)\n      if (item.effect && item.effect.heal) {\n        updatedPlayer.health = Math.min(updatedPlayer.maxHealth, updatedPlayer.health + item.effect.heal);\n      }\n      return {\n        ...prevState,\n        inventory: updatedInventory,\n        player: updatedPlayer\n      };\n    });\n    setItemOptions(null);\n  };\n  const handleDropItem = (item, dropType) => {\n    setPlayer(prevPlayer => {\n      let updatedInventory = [...prevPlayer.inventory];\n      const itemIndex = updatedInventory.findIndex(i => i.itemId === item.itemId);\n      if (itemIndex > -1) {\n        switch (dropType) {\n          case 'one':\n            if (updatedInventory[itemIndex].quantity > 1) {\n              updatedInventory[itemIndex].quantity -= 1;\n            } else {\n              updatedInventory.splice(itemIndex, 1);\n            }\n            break;\n          case 'all':\n            updatedInventory.splice(itemIndex, 1);\n            break;\n          case 'x':\n            const dropAmount = prompt('How many would you like to drop?');\n            if (dropAmount > 0 && dropAmount < updatedInventory[itemIndex].quantity) {\n              updatedInventory[itemIndex].quantity -= dropAmount;\n            } else if (dropAmount >= updatedInventory[itemIndex].quantity) {\n              updatedInventory.splice(itemIndex, 1);\n            }\n            break;\n          default:\n            break;\n        }\n      }\n      return {\n        ...prevPlayer,\n        inventory: updatedInventory\n      };\n    });\n    setDropOptions(null);\n    setItemOptions(null);\n  };\n  const addItemToInventory = () => {\n    const randomItem = itemConfig.items[Math.floor(Math.random() * itemConfig.items.length)];\n    setPlayer(prevPlayer => {\n      const updatedInventory = [...prevPlayer.inventory];\n      const existingItemIndex = updatedInventory.findIndex(i => i.itemId === randomItem.itemId);\n      if (existingItemIndex > -1) {\n        if (randomItem.isQuestItem) {\n          // Quest items cannot stack\n          updatedInventory.push({\n            ...randomItem,\n            quantity: 1\n          });\n        } else {\n          // Stack the item up to MAX_STACK_SIZE\n          updatedInventory[existingItemIndex].quantity = Math.min(updatedInventory[existingItemIndex].quantity + 1, MAX_STACK_SIZE);\n        }\n      } else {\n        updatedInventory.push({\n          ...randomItem,\n          quantity: 1\n        });\n      }\n\n      // Ensure the inventory does not exceed max capacity for unique items\n      if (updatedInventory.length > MAX_INVENTORY_CAPACITY) {\n        alert('Inventory is full! Cannot add more unique items.');\n        return prevPlayer;\n      }\n      return {\n        ...prevPlayer,\n        inventory: updatedInventory\n      };\n    });\n  };\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (itemOptions && !event.target.closest(`.${styles.itemOptions}`) && !event.target.closest(`.${styles.dropOptions}`)) {\n        setItemOptions(null);\n        setDropOptions(null);\n      }\n    };\n\n    // Delay adding the event listener slightly to avoid immediate dismissal\n    const timeoutId = setTimeout(() => {\n      document.addEventListener('click', handleClickOutside);\n    }, 0);\n    return () => {\n      document.removeEventListener('click', handleClickOutside);\n      clearTimeout(timeoutId);\n      // Clean up timeout when the component unmounts\n      if (optionsTimeout.current) {\n        clearTimeout(optionsTimeout.current);\n      }\n    };\n  }, [itemOptions, dropOptions]);\n  const getItemOptions = item => {\n    if (!item) return [];\n    const itemData = itemConfig.items.find(i => i.itemId === item.itemId);\n    if (!itemData) return [];\n    if (dropOptions) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.dropOptions,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDropItem(item, 'one'),\n          children: \"Drop 1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDropItem(item, 'x'),\n          children: \"Drop X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDropItem(item, 'all'),\n          children: \"Drop All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setDropOptions(null),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this);\n    }\n    const options = [];\n    if (itemData.isUsable) {\n      if (itemData.type === 'food') {\n        options.push(/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            handleUseItem(itemData);\n          },\n          children: \"Eat\"\n        }, \"eat\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 22\n        }, this));\n      } else if (itemData.type === 'potion') {\n        options.push(/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            handleUseItem(itemData);\n          },\n          children: \"Drink\"\n        }, \"drink\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 22\n        }, this));\n      } else {\n        options.push(/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            handleUseItem(itemData);\n          },\n          children: \"Use\"\n        }, \"use\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 22\n        }, this));\n      }\n    }\n    if (itemData.type === 'weapon' || itemData.type === 'armor' || itemData.type === 'jewelry') {\n      options.push(/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          handleEquipItem(itemData);\n          setItemOptions(null);\n        },\n        children: \"Equip\"\n      }, \"equip\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 20\n      }, this));\n    }\n    options.push(/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setDropOptions(true);\n      },\n      children: \"Drop\"\n    }, \"drop\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 18\n    }, this));\n    return options;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.inventoryContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.inventoryHeader,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: styles.inventoryTitle,\n        children: [\"Inventory (\", inventory.length, \" / \", MAX_INVENTORY_CAPACITY, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.addItemButton,\n        onClick: addItemToInventory,\n        children: \"Add Random Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.layout,\n      children: inventory.map((item, index) => /*#__PURE__*/_jsxDEV(InventorySlot, {\n        index: index,\n        item: item,\n        moveItem: handleMoveItem,\n        onLeftClick: handleLeftClick,\n        setItemOptions: setItemOptions // Pass setItemOptions to clear it on drag\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }, this), itemOptions && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.itemOptions,\n      style: {\n        position: 'absolute',\n        top: `${itemOptions.position.top}px`,\n        left: `${itemOptions.position.left}px`,\n        transform: 'translate(-50%, 0)' // Center horizontally\n      },\n      onMouseEnter: handleMouseEnterOptions,\n      onMouseLeave: handleMouseLeaveOptions,\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: itemOptions.item.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 11\n      }, this), getItemOptions(itemOptions.item)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 295,\n    columnNumber: 5\n  }, this);\n}\n_s(Inventory, \"YML/8oRIaalAw7BM1sABs46GN5w=\");\n_c = Inventory;\nfunction InventorySlot({\n  index,\n  item,\n  moveItem,\n  onLeftClick,\n  setItemOptions\n}) {\n  _s2();\n  var _dropRef$current;\n  const slotRef = useRef(null);\n  const [, dropRef] = useDrop({\n    accept: ItemTypes.ITEM,\n    hover: (draggedItem, monitor) => {\n      if (!monitor.isOver({\n        shallow: true\n      })) return;\n      if (draggedItem.index === index) return;\n      moveItem(draggedItem.index, index);\n      draggedItem.index = index;\n    },\n    collect: monitor => ({\n      isOver: monitor.isOver()\n    })\n  });\n  const [{\n    isDragging\n  }, dragRef] = useDrag({\n    type: ItemTypes.ITEM,\n    item: () => {\n      // Dismiss item options when dragging starts\n      setItemOptions(null);\n      return {\n        index\n      };\n    },\n    collect: monitor => ({\n      isDragging: monitor.isDragging()\n    })\n  });\n  const itemData = item ? itemConfig.items.find(i => i.itemId === item.itemId) : null;\n  const opacity = isDragging ? 0.5 : 1;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: el => {\n      slotRef.current = el;\n      dropRef(el);\n    },\n    className: `${styles.inventorySlot} ${(_dropRef$current = dropRef.current) !== null && _dropRef$current !== void 0 && _dropRef$current.isOver ? styles.highlightSlot : ''}`,\n    onClick: () => onLeftClick(item, index, slotRef.current) // Pass the slot element to calculate position\n    ,\n    children: item ? /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: dragRef,\n      className: `${styles.inventoryItem} ${itemData ? styles[itemData.rarity] : ''}`,\n      style: {\n        opacity\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: `http://localhost:5000/assets/images/items/${itemData === null || itemData === void 0 ? void 0 : itemData.image}`,\n        alt: itemData === null || itemData === void 0 ? void 0 : itemData.name,\n        className: styles.itemImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"(x\", item === null || item === void 0 ? void 0 : item.quantity, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 9\n    }, this) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 365,\n    columnNumber: 5\n  }, this);\n}\n_s2(InventorySlot, \"avwZwr8fn4/9RasAY+4I0+oIBLU=\", false, function () {\n  return [useDrop, useDrag];\n});\n_c2 = InventorySlot;\nexport default Inventory;\nvar _c, _c2;\n$RefreshReg$(_c, \"Inventory\");\n$RefreshReg$(_c2, \"InventorySlot\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","useDrag","useDrop","styles","itemConfig","jsxDEV","_jsxDEV","ItemTypes","ITEM","MAX_INVENTORY_CAPACITY","MAX_STACK_SIZE","Inventory","inventory","setPlayer","maxInventorySpace","gameState","setGameState","_s","itemOptions","setItemOptions","dropOptions","setDropOptions","optionsTimeout","handleMoveItem","fromIndex","toIndex","updatedInventory","movedItem","splice","filteredInventory","filter","item","prevPlayer","handleLeftClick","index","slotElement","rect","getBoundingClientRect","position","top","bottom","window","scrollY","left","width","current","clearTimeout","setTimeout","handleMouseEnterOptions","handleMouseLeaveOptions","handleEquipItem","prevState","equipmentSlot","slot","updatedEquipment","equipment","itemIndex","findIndex","i","itemId","quantity","emptyFingerSlot","fingers","finger","alert","length","push","handleUseItem","updatedPlayer","player","effect","heal","health","Math","min","maxHealth","handleDropItem","dropType","dropAmount","prompt","addItemToInventory","randomItem","items","floor","random","existingItemIndex","isQuestItem","handleClickOutside","event","target","closest","timeoutId","document","addEventListener","removeEventListener","getItemOptions","itemData","find","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","options","isUsable","type","inventoryContainer","inventoryHeader","inventoryTitle","addItemButton","layout","map","InventorySlot","moveItem","onLeftClick","style","transform","onMouseEnter","onMouseLeave","name","_c","_s2","_dropRef$current","slotRef","dropRef","accept","hover","draggedItem","monitor","isOver","shallow","collect","isDragging","dragRef","opacity","ref","el","inventorySlot","highlightSlot","inventoryItem","rarity","src","image","alt","itemImage","_c2","$RefreshReg$"],"sources":["C:/Users/Hayden/Documents/BVT School Work/ChatGPT/cookie-clicker-game/temp-repo/src/components/inventory/inventory.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport { useDrag, useDrop } from 'react-dnd';\r\nimport styles from './inventory.module.css';\r\nimport itemConfig from '../items/itemConfig.json';\r\n\r\nconst ItemTypes = {\r\n  ITEM: 'item',\r\n};\r\n\r\nconst MAX_INVENTORY_CAPACITY = 30;\r\nconst MAX_STACK_SIZE = 65535;\r\n\r\nfunction Inventory({ inventory = [], setPlayer, maxInventorySpace = MAX_INVENTORY_CAPACITY, gameState, setGameState }) {\r\n  const [itemOptions, setItemOptions] = useState(null);\r\n  const [dropOptions, setDropOptions] = useState(null);\r\n  const optionsTimeout = useRef(null);\r\n\r\n  const handleMoveItem = useCallback((fromIndex, toIndex) => {\r\n    if (fromIndex === toIndex) return;\r\n\r\n    const updatedInventory = [...inventory];\r\n    const [movedItem] = updatedInventory.splice(fromIndex, 1);\r\n    updatedInventory.splice(toIndex, 0, movedItem);\r\n\r\n    const filteredInventory = updatedInventory.filter((item) => item !== null);\r\n\r\n    setPlayer((prevPlayer) => ({\r\n      ...prevPlayer,\r\n      inventory: filteredInventory,\r\n    }));\r\n  }, [inventory, setPlayer]);\r\n\r\n  const handleLeftClick = useCallback((item, index, slotElement) => {\r\n    if (item) {\r\n      const rect = slotElement.getBoundingClientRect();\r\n\r\n      setItemOptions({\r\n        item,\r\n        index,\r\n        position: {\r\n          top: rect.bottom + window.scrollY, // Position below the inventory slot\r\n          left: rect.left + rect.width / 2, // Center horizontally\r\n        },\r\n      });\r\n\r\n      // Clear any existing timeout to reset the 5-second timer\r\n      if (optionsTimeout.current) {\r\n        clearTimeout(optionsTimeout.current);\r\n      }\r\n\r\n      // Auto-dismiss the options after 5 seconds if the mouse isn't inside\r\n      optionsTimeout.current = setTimeout(() => {\r\n        setItemOptions(null);\r\n      }, 5000);\r\n    } else {\r\n      setItemOptions(null);\r\n    }\r\n  }, []);\r\n\r\n  const handleMouseEnterOptions = useCallback(() => {\r\n    if (optionsTimeout.current) {\r\n      clearTimeout(optionsTimeout.current);\r\n    }\r\n  }, []);\r\n\r\n  const handleMouseLeaveOptions = useCallback(() => {\r\n    if (optionsTimeout.current) {\r\n      clearTimeout(optionsTimeout.current);\r\n    }\r\n    optionsTimeout.current = setTimeout(() => {\r\n      setItemOptions(null);\r\n    }, 5000);\r\n  }, []);\r\n\r\n  const handleEquipItem = (item) => {\r\n    setGameState((prevState) => {\r\n      const equipmentSlot = item.slot;\r\n      let updatedEquipment = { ...prevState.equipment };\r\n      let updatedInventory = [...prevState.inventory];\r\n  \r\n      // Remove the item from inventory\r\n      const itemIndex = updatedInventory.findIndex((i) => i.itemId === item.itemId);\r\n      if (itemIndex > -1) {\r\n        if (updatedInventory[itemIndex].quantity > 1) {\r\n          updatedInventory[itemIndex].quantity -= 1;\r\n        } else {\r\n          updatedInventory.splice(itemIndex, 1);\r\n        }\r\n      }\r\n  \r\n      // Equip the item in the appropriate slot\r\n      if (equipmentSlot === 'fingers') {\r\n        const emptyFingerSlot = updatedEquipment.fingers.findIndex((finger) => finger === null);\r\n        if (emptyFingerSlot !== -1) {\r\n          updatedEquipment.fingers[emptyFingerSlot] = item;\r\n        } else {\r\n          alert('No available finger slot to equip this item.');\r\n          return prevState;\r\n        }\r\n      } else if (equipmentSlot === 'leftGlove' || equipmentSlot === 'rightGlove' || equipmentSlot === 'offHand') {\r\n        // For leftGlove, rightGlove, and offHand slots\r\n        if (updatedEquipment[equipmentSlot]) {\r\n          // Unequip current item and add back to inventory\r\n          if (updatedInventory.length >= maxInventorySpace) {\r\n            alert('Inventory is full! Cannot unequip this item.');\r\n            return prevState;\r\n          }\r\n          updatedInventory.push({ ...updatedEquipment[equipmentSlot], quantity: 1 });\r\n        }\r\n        updatedEquipment[equipmentSlot] = item;\r\n      } else {\r\n        // For other slots\r\n        if (updatedEquipment[equipmentSlot]) {\r\n          // Unequip current item and add back to inventory\r\n          if (updatedInventory.length >= maxInventorySpace) {\r\n            alert('Inventory is full! Cannot unequip this item.');\r\n            return prevState;\r\n          }\r\n          updatedInventory.push({ ...updatedEquipment[equipmentSlot], quantity: 1 });\r\n        }\r\n        updatedEquipment[equipmentSlot] = item;\r\n      }\r\n  \r\n      return {\r\n        ...prevState,\r\n        equipment: updatedEquipment,\r\n        inventory: updatedInventory,\r\n      };\r\n    });\r\n  };\r\n\r\n  const handleUseItem = (item) => {\r\n    setGameState((prevState) => {\r\n      let updatedInventory = [...prevState.inventory];\r\n      let updatedPlayer = { ...prevState.player };\r\n\r\n      // Remove the item from inventory\r\n      const itemIndex = updatedInventory.findIndex((i) => i.itemId === item.itemId);\r\n      if (itemIndex > -1) {\r\n        if (updatedInventory[itemIndex].quantity > 1) {\r\n          updatedInventory[itemIndex].quantity -= 1;\r\n        } else {\r\n          updatedInventory.splice(itemIndex, 1);\r\n        }\r\n      }\r\n\r\n      // Apply the item's effect (e.g., healing)\r\n      if (item.effect && item.effect.heal) {\r\n        updatedPlayer.health = Math.min(\r\n          updatedPlayer.maxHealth,\r\n          updatedPlayer.health + item.effect.heal\r\n        );\r\n      }\r\n\r\n      return {\r\n        ...prevState,\r\n        inventory: updatedInventory,\r\n        player: updatedPlayer,\r\n      };\r\n    });\r\n    setItemOptions(null);\r\n  };\r\n\r\n  const handleDropItem = (item, dropType) => {\r\n    setPlayer((prevPlayer) => {\r\n      let updatedInventory = [...prevPlayer.inventory];\r\n      const itemIndex = updatedInventory.findIndex((i) => i.itemId === item.itemId);\r\n\r\n      if (itemIndex > -1) {\r\n        switch (dropType) {\r\n          case 'one':\r\n            if (updatedInventory[itemIndex].quantity > 1) {\r\n              updatedInventory[itemIndex].quantity -= 1;\r\n            } else {\r\n              updatedInventory.splice(itemIndex, 1);\r\n            }\r\n            break;\r\n          case 'all':\r\n            updatedInventory.splice(itemIndex, 1);\r\n            break;\r\n          case 'x':\r\n            const dropAmount = prompt('How many would you like to drop?');\r\n            if (dropAmount > 0 && dropAmount < updatedInventory[itemIndex].quantity) {\r\n              updatedInventory[itemIndex].quantity -= dropAmount;\r\n            } else if (dropAmount >= updatedInventory[itemIndex].quantity) {\r\n              updatedInventory.splice(itemIndex, 1);\r\n            }\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n\r\n      return {\r\n        ...prevPlayer,\r\n        inventory: updatedInventory,\r\n      };\r\n    });\r\n    setDropOptions(null);\r\n    setItemOptions(null);\r\n  };\r\n\r\n  const addItemToInventory = () => {\r\n    const randomItem = itemConfig.items[Math.floor(Math.random() * itemConfig.items.length)];\r\n    setPlayer((prevPlayer) => {\r\n      const updatedInventory = [...prevPlayer.inventory];\r\n      const existingItemIndex = updatedInventory.findIndex((i) => i.itemId === randomItem.itemId);\r\n\r\n      if (existingItemIndex > -1) {\r\n        if (randomItem.isQuestItem) {\r\n          // Quest items cannot stack\r\n          updatedInventory.push({ ...randomItem, quantity: 1 });\r\n        } else {\r\n          // Stack the item up to MAX_STACK_SIZE\r\n          updatedInventory[existingItemIndex].quantity = Math.min(\r\n            updatedInventory[existingItemIndex].quantity + 1,\r\n            MAX_STACK_SIZE\r\n          );\r\n        }\r\n      } else {\r\n        updatedInventory.push({ ...randomItem, quantity: 1 });\r\n      }\r\n\r\n      // Ensure the inventory does not exceed max capacity for unique items\r\n      if (updatedInventory.length > MAX_INVENTORY_CAPACITY) {\r\n        alert('Inventory is full! Cannot add more unique items.');\r\n        return prevPlayer;\r\n      }\r\n\r\n      return {\r\n        ...prevPlayer,\r\n        inventory: updatedInventory,\r\n      };\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleClickOutside = (event) => {\r\n      if (itemOptions && !event.target.closest(`.${styles.itemOptions}`) && !event.target.closest(`.${styles.dropOptions}`)) {\r\n        setItemOptions(null);\r\n        setDropOptions(null);\r\n      }\r\n    };\r\n\r\n    // Delay adding the event listener slightly to avoid immediate dismissal\r\n    const timeoutId = setTimeout(() => {\r\n      document.addEventListener('click', handleClickOutside);\r\n    }, 0);\r\n\r\n    return () => {\r\n      document.removeEventListener('click', handleClickOutside);\r\n      clearTimeout(timeoutId);\r\n      // Clean up timeout when the component unmounts\r\n      if (optionsTimeout.current) {\r\n        clearTimeout(optionsTimeout.current);\r\n      }\r\n    };\r\n  }, [itemOptions, dropOptions]);\r\n\r\n  const getItemOptions = (item) => {\r\n    if (!item) return [];\r\n    const itemData = itemConfig.items.find((i) => i.itemId === item.itemId);\r\n    if (!itemData) return [];\r\n\r\n    if (dropOptions) {\r\n      return (\r\n        <div className={styles.dropOptions}>\r\n          <button onClick={() => handleDropItem(item, 'one')}>Drop 1</button>\r\n          <button onClick={() => handleDropItem(item, 'x')}>Drop X</button>\r\n          <button onClick={() => handleDropItem(item, 'all')}>Drop All</button>\r\n          <button onClick={() => setDropOptions(null)}>Cancel</button>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    const options = [];\r\n    if (itemData.isUsable) {\r\n      if (itemData.type === 'food') {\r\n        options.push(<button key=\"eat\" onClick={() => { handleUseItem(itemData); }}>Eat</button>);\r\n      } else if (itemData.type === 'potion') {\r\n        options.push(<button key=\"drink\" onClick={() => { handleUseItem(itemData); }}>Drink</button>);\r\n      } else {\r\n        options.push(<button key=\"use\" onClick={() => { handleUseItem(itemData); }}>Use</button>);\r\n      }\r\n    }\r\n    if (itemData.type === 'weapon' || itemData.type === 'armor' || itemData.type === 'jewelry') {\r\n      options.push(<button key=\"equip\" onClick={() => { handleEquipItem(itemData); setItemOptions(null); }}>Equip</button>);\r\n    }\r\n    options.push(<button key=\"drop\" onClick={() => { setDropOptions(true); }}>Drop</button>);\r\n\r\n    return options;\r\n  };\r\n\r\n  return (\r\n    <div className={styles.inventoryContainer}>\r\n      <div className={styles.inventoryHeader}>\r\n        <h2 className={styles.inventoryTitle}>Inventory ({inventory.length} / {MAX_INVENTORY_CAPACITY})</h2>\r\n        <button className={styles.addItemButton} onClick={addItemToInventory}>Add Random Item</button>\r\n      </div>\r\n      <div className={styles.layout}>\r\n        {inventory.map((item, index) => (\r\n          <InventorySlot\r\n            key={index}\r\n            index={index}\r\n            item={item}\r\n            moveItem={handleMoveItem}\r\n            onLeftClick={handleLeftClick}\r\n            setItemOptions={setItemOptions} // Pass setItemOptions to clear it on drag\r\n          />\r\n        ))}\r\n      </div>\r\n      {itemOptions && (\r\n        <div\r\n          className={styles.itemOptions}\r\n          style={{\r\n            position: 'absolute',\r\n            top: `${itemOptions.position.top}px`,\r\n            left: `${itemOptions.position.left}px`,\r\n            transform: 'translate(-50%, 0)', // Center horizontally\r\n          }}\r\n          onMouseEnter={handleMouseEnterOptions}\r\n          onMouseLeave={handleMouseLeaveOptions}\r\n        >\r\n          <h4>{itemOptions.item.name}</h4>\r\n          {getItemOptions(itemOptions.item)}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction InventorySlot({ index, item, moveItem, onLeftClick, setItemOptions }) {\r\n  const slotRef = useRef(null);\r\n\r\n  const [, dropRef] = useDrop({\r\n    accept: ItemTypes.ITEM,\r\n    hover: (draggedItem, monitor) => {\r\n      if (!monitor.isOver({ shallow: true })) return;\r\n      if (draggedItem.index === index) return;\r\n\r\n      moveItem(draggedItem.index, index);\r\n      draggedItem.index = index;\r\n    },\r\n    collect: (monitor) => ({\r\n      isOver: monitor.isOver(),\r\n    }),\r\n  });\r\n\r\n  const [{ isDragging }, dragRef] = useDrag({\r\n    type: ItemTypes.ITEM,\r\n    item: () => {\r\n      // Dismiss item options when dragging starts\r\n      setItemOptions(null);\r\n      return { index };\r\n    },\r\n    collect: (monitor) => ({\r\n      isDragging: monitor.isDragging(),\r\n    }),\r\n  });\r\n\r\n  const itemData = item ? itemConfig.items.find((i) => i.itemId === item.itemId) : null;\r\n  const opacity = isDragging ? 0.5 : 1;\r\n\r\n  return (\r\n    <div\r\n      ref={(el) => {\r\n        slotRef.current = el;\r\n        dropRef(el);\r\n      }}\r\n      className={`${styles.inventorySlot} ${dropRef.current?.isOver ? styles.highlightSlot : ''}`}\r\n      onClick={() => onLeftClick(item, index, slotRef.current)} // Pass the slot element to calculate position\r\n    >\r\n      {item ? (\r\n        <div\r\n          ref={dragRef}\r\n          className={`${styles.inventoryItem} ${itemData ? styles[itemData.rarity] : ''}`}\r\n          style={{ opacity }}\r\n        >\r\n          <img\r\n            src={`http://localhost:5000/assets/images/items/${itemData?.image}`}\r\n            alt={itemData?.name}\r\n            className={styles.itemImage}\r\n          />\r\n          <p>(x{item?.quantity})</p>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Inventory;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}