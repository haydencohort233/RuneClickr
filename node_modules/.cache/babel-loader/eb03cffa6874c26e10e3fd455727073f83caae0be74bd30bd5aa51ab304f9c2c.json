{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hayden\\\\Documents\\\\BVT School Work\\\\ChatGPT\\\\cookie-clicker-game\\\\temp-repo\\\\src\\\\components\\\\worldmap\\\\worldMap.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport styles from './worldMap.module.css';\nimport worldLocations from './worldLocations.json';\nimport worldMapImage from '../../assets/images/worldmap/worldmap.png';\nimport markerAvailable from '../../assets/images/worldmap/icons/marker_available.png';\nimport markerUnavailable from '../../assets/images/worldmap/icons/marker_unavailable.gif';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WorldMap({\n  gameState,\n  setGameState,\n  onClose\n}) {\n  _s();\n  const mapRef = useRef(null);\n  const [hoveredLocation, setHoveredLocation] = useState(null);\n  const [timeRemaining, setTimeRemaining] = useState(null);\n  useEffect(() => {\n    if (gameState.travel && gameState.travel.isTraveling) {\n      setTimeRemaining(gameState.travel.timeRemaining);\n      const timer = setInterval(() => {\n        setTimeRemaining(prev => {\n          if (prev > 1) {\n            return prev - 1;\n          } else {\n            clearInterval(timer);\n            return 0;\n          }\n        });\n      }, 1000);\n      return () => clearInterval(timer);\n    } else {\n      setTimeRemaining(null);\n    }\n  }, [gameState.travel]);\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (mapRef.current && !mapRef.current.contains(event.target) && typeof onClose === 'function') {\n        onClose();\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [onClose]);\n\n  // Handle traveling prompt to a specific location\n  const promptTravelToLocation = location => {\n    if (gameState.currentLocation === location.id) {\n      console.log(\"You are already at this location.\");\n      return;\n    }\n    const confirmTravel = window.confirm(`Do you want to travel to ${location.name}?`);\n    if (confirmTravel) {\n      startTravel(location);\n    }\n  };\n\n  // Start traveling to the selected location\n  const startTravel = location => {\n    console.log(`Begin traveling to ${location.name}`);\n\n    // Set travel state in gameState\n    setGameState(prevState => {\n      const newGameState = {\n        ...prevState,\n        travel: {\n          currentLocation: prevState.currentLocation,\n          destination: location.name,\n          timeRemaining: location.travelTime,\n          // Use location's configurable travel time\n          isTraveling: true\n        }\n      };\n      console.log(\"Updated Game State (Start Travel): \", newGameState);\n      return newGameState;\n    });\n\n    // Update gameState once travel is complete\n    setTimeout(() => {\n      setGameState(prevState => {\n        const completedGameState = {\n          ...prevState,\n          currentLocation: location.id,\n          travel_count: (prevState.travel_count || 0) + 1,\n          travel: {\n            currentLocation: location.id,\n            destination: '',\n            timeRemaining: 0,\n            isTraveling: false\n          }\n        };\n        console.log(\"Updated Game State (Travel Complete): \", completedGameState);\n        return completedGameState;\n      });\n\n      // Optionally save the game state after traveling\n      // saveGameToServer(); // Uncomment this if save function is available\n    }, location.travelTime * 1000); // Use location's configurable travel time in seconds\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.worldMapOverlay,\n    ref: mapRef,\n    onClick: e => {\n      if (e.target === e.currentTarget && typeof onClose === 'function') {\n        onClose();\n      }\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.worldMapContainer,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.mapModal,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.currentLocation,\n          children: [\"Currently at: \", gameState.currentLocation]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), gameState.travel && gameState.travel.isTraveling && timeRemaining !== null && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.timeRemaining,\n          children: [\"Time until arrival: \", timeRemaining, \" seconds\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: worldMapImage,\n          alt: \"World Map\",\n          className: styles.mapImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.locationsContainer,\n          children: worldLocations.map(location => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.locationMarker,\n              style: {\n                top: location.coordinates.top,\n                left: location.coordinates.left,\n                backgroundImage: `url(${gameState.currentLocation === location.id ? markerUnavailable : markerAvailable})`\n              },\n              onClick: () => promptTravelToLocation(location)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }, this)\n          }, location.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          className: styles.closeButton,\n          children: \"Close Map\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n_s(WorldMap, \"Xuhq9nq6jBlJcplRRkdKSl744fM=\");\n_c = WorldMap;\nexport default WorldMap;\nvar _c;\n$RefreshReg$(_c, \"WorldMap\");","map":{"version":3,"names":["React","useState","useEffect","useRef","styles","worldLocations","worldMapImage","markerAvailable","markerUnavailable","jsxDEV","_jsxDEV","WorldMap","gameState","setGameState","onClose","_s","mapRef","hoveredLocation","setHoveredLocation","timeRemaining","setTimeRemaining","travel","isTraveling","timer","setInterval","prev","clearInterval","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","promptTravelToLocation","location","currentLocation","id","console","log","confirmTravel","window","confirm","name","startTravel","prevState","newGameState","destination","travelTime","setTimeout","completedGameState","travel_count","className","worldMapOverlay","ref","onClick","e","currentTarget","children","worldMapContainer","mapModal","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","mapImage","locationsContainer","map","locationMarker","style","top","coordinates","left","backgroundImage","closeButton","_c","$RefreshReg$"],"sources":["C:/Users/Hayden/Documents/BVT School Work/ChatGPT/cookie-clicker-game/temp-repo/src/components/worldmap/worldMap.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport styles from './worldMap.module.css';\r\nimport worldLocations from './worldLocations.json';\r\nimport worldMapImage from '../../assets/images/worldmap/worldmap.png';\r\nimport markerAvailable from '../../assets/images/worldmap/icons/marker_available.png';\r\nimport markerUnavailable from '../../assets/images/worldmap/icons/marker_unavailable.gif';\r\n\r\nfunction WorldMap({ gameState, setGameState, onClose }) {\r\n  const mapRef = useRef(null);\r\n  const [hoveredLocation, setHoveredLocation] = useState(null);\r\n  const [timeRemaining, setTimeRemaining] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (gameState.travel && gameState.travel.isTraveling) {\r\n      setTimeRemaining(gameState.travel.timeRemaining);\r\n      const timer = setInterval(() => {\r\n        setTimeRemaining((prev) => {\r\n          if (prev > 1) {\r\n            return prev - 1;\r\n          } else {\r\n            clearInterval(timer);\r\n            return 0;\r\n          }\r\n        });\r\n      }, 1000);\r\n      return () => clearInterval(timer);\r\n    } else {\r\n      setTimeRemaining(null);\r\n    }\r\n  }, [gameState.travel]);\r\n\r\n  useEffect(() => {\r\n    const handleClickOutside = (event) => {\r\n      if (mapRef.current && !mapRef.current.contains(event.target) && typeof onClose === 'function') {\r\n        onClose();\r\n      }\r\n    };\r\n\r\n    document.addEventListener('mousedown', handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleClickOutside);\r\n    };\r\n  }, [onClose]);\r\n\r\n  // Handle traveling prompt to a specific location\r\n  const promptTravelToLocation = (location) => {\r\n    if (gameState.currentLocation === location.id) {\r\n      console.log(\"You are already at this location.\");\r\n      return;\r\n    }\r\n\r\n    const confirmTravel = window.confirm(`Do you want to travel to ${location.name}?`);\r\n    if (confirmTravel) {\r\n      startTravel(location);\r\n    }\r\n  };\r\n\r\n  // Start traveling to the selected location\r\n  const startTravel = (location) => {\r\n    console.log(`Begin traveling to ${location.name}`);\r\n\r\n    // Set travel state in gameState\r\n    setGameState((prevState) => {\r\n      const newGameState = {\r\n        ...prevState,\r\n        travel: {\r\n          currentLocation: prevState.currentLocation,\r\n          destination: location.name,\r\n          timeRemaining: location.travelTime, // Use location's configurable travel time\r\n          isTraveling: true,\r\n        },\r\n      };\r\n      console.log(\"Updated Game State (Start Travel): \", newGameState);\r\n      return newGameState;\r\n    });\r\n\r\n    // Update gameState once travel is complete\r\n    setTimeout(() => {\r\n      setGameState((prevState) => {\r\n        const completedGameState = {\r\n          ...prevState,\r\n          currentLocation: location.id,\r\n          travel_count: (prevState.travel_count || 0) + 1,\r\n          travel: {\r\n            currentLocation: location.id,\r\n            destination: '',\r\n            timeRemaining: 0,\r\n            isTraveling: false,\r\n          },\r\n        };\r\n        console.log(\"Updated Game State (Travel Complete): \", completedGameState);\r\n        return completedGameState;\r\n      });\r\n\r\n      // Optionally save the game state after traveling\r\n      // saveGameToServer(); // Uncomment this if save function is available\r\n    }, location.travelTime * 1000); // Use location's configurable travel time in seconds\r\n  };\r\n\r\n  return (\r\n    <div className={styles.worldMapOverlay} ref={mapRef} onClick={(e) => {\r\n      if (e.target === e.currentTarget && typeof onClose === 'function') {\r\n        onClose();\r\n      }\r\n    }}>\r\n      <div className={styles.worldMapContainer}>\r\n        <div className={styles.mapModal}>\r\n          {/* Display Current Location */}\r\n          <p className={styles.currentLocation}>Currently at: {gameState.currentLocation}</p>\r\n\r\n          {/* Display Time Remaining if Traveling */}\r\n          {gameState.travel && gameState.travel.isTraveling && timeRemaining !== null && (\r\n            <p className={styles.timeRemaining}>Time until arrival: {timeRemaining} seconds</p>\r\n          )}\r\n\r\n          <img src={worldMapImage} alt=\"World Map\" className={styles.mapImage} />\r\n          <div className={styles.locationsContainer}>\r\n            {worldLocations.map((location) => (\r\n              <div key={location.id}>\r\n                {/* Location Marker */}\r\n                <div\r\n                  className={styles.locationMarker}\r\n                  style={{\r\n                    top: location.coordinates.top,\r\n                    left: location.coordinates.left,\r\n                    backgroundImage: `url(${\r\n                      gameState.currentLocation === location.id\r\n                        ? markerUnavailable\r\n                        : markerAvailable\r\n                    })`,\r\n                  }}\r\n                  onClick={() => promptTravelToLocation(location)}\r\n                />\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <button onClick={onClose} className={styles.closeButton}>Close Map</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WorldMap;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}